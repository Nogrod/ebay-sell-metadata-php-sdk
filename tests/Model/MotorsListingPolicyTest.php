<?php
/**
 * MotorsListingPolicyTest
 *
 * PHP version 8.1
 *
 * @package  eBay\Sell\Metadata
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Metadata API
 *
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.11.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace eBay\Sell\Metadata\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * MotorsListingPolicyTest Class Doc Comment
 *
 * @description MotorsListingPolicy
 * @package     eBay\Sell\Metadata
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MotorsListingPolicyTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "MotorsListingPolicy"
     */
    public function testMotorsListingPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "category_id"
     */
    public function testPropertyCategoryId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "category_tree_id"
     */
    public function testPropertyCategoryTreeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deposit_supported"
     */
    public function testPropertyDepositSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_ad_format_enabled"
     */
    public function testPropertyEbayMotorsProAdFormatEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_auto_accept_enabled"
     */
    public function testPropertyEbayMotorsProAutoAcceptEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_auto_decline_enabled"
     */
    public function testPropertyEbayMotorsProAutoDeclineEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_best_offer_enabled"
     */
    public function testPropertyEbayMotorsProBestOfferEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_company_name_enabled"
     */
    public function testPropertyEbayMotorsProCompanyNameEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_contact_by_address_enabled"
     */
    public function testPropertyEbayMotorsProContactByAddressEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_contact_by_email_enabled"
     */
    public function testPropertyEbayMotorsProContactByEmailEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_contact_by_phone_enabled"
     */
    public function testPropertyEbayMotorsProContactByPhoneEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_counter_offer_enabled"
     */
    public function testPropertyEbayMotorsProCounterOfferEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_payment_method_check_out_enabled"
     */
    public function testPropertyEbayMotorsProPaymentMethodCheckOutEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_phone_count"
     */
    public function testPropertyEbayMotorsProPhoneCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_seller_contact_details_enabled"
     */
    public function testPropertyEbayMotorsProSellerContactDetailsEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_shipping_method_enabled"
     */
    public function testPropertyEbayMotorsProShippingMethodEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_motors_pro_street_count"
     */
    public function testPropertyEbayMotorsProStreetCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "epid_supported"
     */
    public function testPropertyEpidSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "k_type_supported"
     */
    public function testPropertyKTypeSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_listing_distances"
     */
    public function testPropertyLocalListingDistances()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_ad_format_enabled"
     */
    public function testPropertyLocalMarketAdFormatEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_auto_accept_enabled"
     */
    public function testPropertyLocalMarketAutoAcceptEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_auto_decline_enabled"
     */
    public function testPropertyLocalMarketAutoDeclineEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_best_offer_enabled"
     */
    public function testPropertyLocalMarketBestOfferEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_company_name_enabled"
     */
    public function testPropertyLocalMarketCompanyNameEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_contact_by_address_enabled"
     */
    public function testPropertyLocalMarketContactByAddressEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_contact_by_email_enabled"
     */
    public function testPropertyLocalMarketContactByEmailEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_contact_by_phone_enabled"
     */
    public function testPropertyLocalMarketContactByPhoneEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_counter_offer_enabled"
     */
    public function testPropertyLocalMarketCounterOfferEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_non_subscription"
     */
    public function testPropertyLocalMarketNonSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_payment_method_check_out_enabled"
     */
    public function testPropertyLocalMarketPaymentMethodCheckOutEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_phone_count"
     */
    public function testPropertyLocalMarketPhoneCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_premium_subscription"
     */
    public function testPropertyLocalMarketPremiumSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_regular_subscription"
     */
    public function testPropertyLocalMarketRegularSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_seller_contact_details_enabled"
     */
    public function testPropertyLocalMarketSellerContactDetailsEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_shipping_method_enabled"
     */
    public function testPropertyLocalMarketShippingMethodEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_speciality_subscription"
     */
    public function testPropertyLocalMarketSpecialitySubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_market_street_count"
     */
    public function testPropertyLocalMarketStreetCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_granular_fitment_count"
     */
    public function testPropertyMaxGranularFitmentCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_item_compatibility"
     */
    public function testPropertyMaxItemCompatibility()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_item_compatibility"
     */
    public function testPropertyMinItemCompatibility()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_subscription"
     */
    public function testPropertyNonSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "premium_subscription"
     */
    public function testPropertyPremiumSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "regular_subscription"
     */
    public function testPropertyRegularSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "seller_provided_title_supported"
     */
    public function testPropertySellerProvidedTitleSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "speciality_subscription"
     */
    public function testPropertySpecialitySubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vin_supported"
     */
    public function testPropertyVinSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vrm_supported"
     */
    public function testPropertyVrmSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
