<?php
/**
 * ClassifiedAdPolicyTest
 *
 * PHP version 8.1
 *
 * @package  eBay\Sell\Metadata
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Metadata API
 *
 * The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.
 *
 * The version of the OpenAPI document: v1.11.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace eBay\Sell\Metadata\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ClassifiedAdPolicyTest Class Doc Comment
 *
 * @description This type provides fields that contains applicable Classified Ad policy metadata for the leaf categories returned for the marketplace.
 * @package     eBay\Sell\Metadata
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ClassifiedAdPolicyTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ClassifiedAdPolicy"
     */
    public function testClassifiedAdPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ad_format_enabled"
     */
    public function testPropertyAdFormatEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "category_id"
     */
    public function testPropertyCategoryId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "category_tree_id"
     */
    public function testPropertyCategoryTreeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_auto_accept_enabled"
     */
    public function testPropertyClassifiedAdAutoAcceptEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_auto_decline_enabled"
     */
    public function testPropertyClassifiedAdAutoDeclineEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_best_offer_enabled"
     */
    public function testPropertyClassifiedAdBestOfferEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_company_name_enabled"
     */
    public function testPropertyClassifiedAdCompanyNameEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_contact_by_address_enabled"
     */
    public function testPropertyClassifiedAdContactByAddressEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_contact_by_email_enabled"
     */
    public function testPropertyClassifiedAdContactByEmailEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_contact_by_phone_enabled"
     */
    public function testPropertyClassifiedAdContactByPhoneEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_counter_offer_enabled"
     */
    public function testPropertyClassifiedAdCounterOfferEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_payment_method_enabled"
     */
    public function testPropertyClassifiedAdPaymentMethodEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_phone_count"
     */
    public function testPropertyClassifiedAdPhoneCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_shipping_method_enabled"
     */
    public function testPropertyClassifiedAdShippingMethodEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "classified_ad_street_count"
     */
    public function testPropertyClassifiedAdStreetCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "seller_contact_details_enabled"
     */
    public function testPropertySellerContactDetailsEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
